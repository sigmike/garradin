
-- Configuration de Garradin
CREATE TABLE config (
    cle TEXT PRIMARY KEY,
    valeur TEXT
);

-- On stocke ici les ID de catégorie de compta correspondant aux types spéciaux
-- compta_categorie_cotisations => id_categorie
-- compta_categorie_dons => id_categorie

CREATE TABLE membres_categories
-- Catégories de membres
(
    id INTEGER PRIMARY KEY,
    nom TEXT,
    description TEXT,
    montant_cotisation REAL,
    duree_cotisation INTEGER DEFAULT 12, -- En mois
    droit_wiki INT DEFAULT 1,
    droit_membres INT DEFAULT 1,
    droit_compta INT DEFAULT 1,
    droit_inscription INT DEFAULT 0,
    droit_connexion INT DEFAULT 1,
    droit_config INT DEFAULT 0
);


-- Membres de l'asso
CREATE TABLE membres (
    id INTEGER PRIMARY KEY,
    id_categorie INTEGER NOT NULL,

    -- Connexion
    passe TEXT,

    -- Données personnelles
    nom TEXT,
    email TEXT,

    adresse TEXT,
    code_postal INTEGER,
    ville TEXT,
    pays TEXT,
    telephone TEXT,
    date_naissance TEXT,

    -- Pour le bordel
    notes TEXT,

    date_inscription TEXT DEFAULT CURRENT_DATE,
    date_connexion TEXT,

    -- Dernière cotisation enregistrée
    date_cotisation TEXT,

    FOREIGN KEY (id_categorie) REFERENCES membres_categories (id)
);

CREATE INDEX membres_id_categorie ON membres (id_categorie);

--
-- WIKI
--

CREATE TABLE wiki_pages
-- Pages du wiki
(
    id INTEGER PRIMARY KEY,
    uri TEXT, -- URI unique (équivalent NomPageWiki)
    titre TEXT,
    date_creation TEXT DEFAULT CURRENT_TIMESTAMP,
    date_modification TEXT DEFAULT CURRENT_TIMESTAMP,
    parent INTEGER, -- ID de la page parent
    revision INTEGER, -- Numéro de révision (commence à 0 si pas de texte, +1 à chaque changement du texte)
    droit_lecture INTEGER, -- Accès en lecture
    droit_ecriture INTEGER -- Accès en écriture
);

CREATE UNIQUE INDEX wiki_uri ON wiki_pages (uri);

CREATE VIRTUAL TABLE wiki_recherche USING fts4
-- Table dupliquée pour chercher une page
(
    id INTEGER PRIMARY KEY NOT NULL, -- Clé externe obligatoire
    title TEXT,
    contenu TEXT, -- Contenu de la dernière révision
    FOREIGN KEY (id) REFERENCES wiki_pages(id)
);

CREATE TABLE wiki_revisions
-- Révisions du contenu des pages
(
    id_page INTEGER NOT NULL,
    revision INTEGER,

    id_auteur INTEGER,
    suivi INTEGER, -- Si l'auteur de id_auteur veut suivre les changements de cette page

    contenu TEXT,
    modification TEXT, -- Description des modifications effectuées
    date TEXT DEFAULT CURRENT_TIMESTAMP,

    chiffrement INTEGER DEFAULT 0, -- 1 si le contenu est chiffré, 0 sinon

    PRIMARY KEY(id_page, revision),
    FOREIGN KEY (id_page) REFERENCES wiki_pages (id), -- Clé externe obligatoire
    FOREIGN KEY (id_auteur) REFERENCES membres (id)  -- Clé externe non-obligatoire
);

CREATE INDEX wiki_revisions_id_page ON wiki_revisions (id_page);
CREATE INDEX wiki_revisions_id_auteur ON wiki_revisions (id_auteur, suivi);

CREATE TABLE wiki_fichiers (
    id INTEGER PRIMARY KEY,
    id_page INTEGER NOT NULL,
    nom TEXT,
    hash TEXT,

    FOREIGN KEY (id_page) REFERENCES wiki_pages (id) -- Clé externe obligatoire
);

CREATE INDEX wiki_fichiers_id_page ON wiki_fichiers (id_page);

/*
--
-- COMPTA
--

CREATE TABLE compta_exercices
-- Exercices
(
    id INTEGER PRIMARY KEY,

    debut TEXT DEFAULT CURRENT_DATE,
    fin TEXT DEFAULT CURRENT_DATE
);


CREATE TABLE compta_plan
-- Plan comptable
(
    id INT PRIMARY KEY,
    nom TEXT,
    parent INT,
    description TEXT,
    perso_type TEXT DEFAULT NULL, -- Si NULL, alors l'entrée provient du plan comptable
    perso_valeur INT DEFAULT NULL
);

CREATE TABLE compta_comptes
-- Comptes bancaires
(
    id INTEGER PRIMARY KEY,

    banque TEXT,

    iban TEXT,
    bic TEXT,

    solde_initial REAL,
    solde REAL
);

CREATE TABLE compta_operations
-- Opérations comptables
(
    id INTEGER PRIMARY KEY,

    libelle TEXT,
    remarques TEXT,
    reference TEXT, -- Référence diverse, par exemple numéro de chèque

    debit REAL,
    credit REAL,

    date TEXT DEFAULT CURRENT_DATE,
    moyen_paiement INT DEFAULT NULL,
    double INT, -- Pour compta partie double, ID de l'opération inverse associée

    id_exercice INTEGER DEFAULT NULL, -- En cas de compta simple, l'exercice est permanent
    id_plan INTEGER,
    id_auteur INTEGER
);

CREATE TABLE compta_moyens
-- Moyens de paiement
(
    id INTEGER PRIMARY KEY,
    nom TEXT
);

INSERT INTO compta_moyens (nom) VALUES ('Espèces');
INSERT INTO compta_moyens (nom) VALUES ('Carte bleue');
INSERT INTO compta_moyens (nom) VALUES ('Chèque');
INSERT INTO compta_moyens (nom) VALUES ('Virement');
INSERT INTO compta_moyens (nom) VALUES ('Prélèvement');
INSERT INTO compta_moyens (nom) VALUES ('TIP');

CREATE INDEX compta_operations_id_compte ON compta_operations (id_exercice);
CREATE INDEX compta_operations_id_categorie ON compta_operations (id_plan);
CREATE INDEX compta_operations_id_auteur ON compta_operations (id_auteur);


--
-- générateur de paperasses
--

CREATE TABLE papiers (
    id INTEGER PRIMARY KEY,
    modele INTEGER,

    donnees TEXT
);
*/